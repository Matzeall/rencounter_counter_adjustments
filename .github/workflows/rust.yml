name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: macos-13
            arch: arm64
    steps:
    - uses: actions/checkout@v4

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install build-essential libxcb-shm0-dev libxcb-randr0-dev xcb git

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install -y git
        choco install -y llvm
        choco install -y mingw

    - name: Install dependencies (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install git
        brew install llvm
        brew install mingw-w64

    - name: Install Rustup (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env

    - name: Set up Rust
      run: rustup update stable

    - name: Build
      run: cargo build --release --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Archive build output (Linux and macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir rencounter_counter
        cp target/release/rencounter_counter rencounter_counter/
        cp text-detection.rten rencounter_counter/
        cp text-recognition.rten rencounter_counter/
        zip -r build-output.zip rencounter_counter

    - name: Archive build output (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir rencounter_counter
        cp target/release/rencounter_counter.exe rencounter_counter/
        cp text-detection.rten rencounter_counter/
        cp text-recognition.rten rencounter_counter/
        powershell Compress-Archive -Path rencounter_counter -DestinationPath build-output.zip

    - name: Upload build output (Linux and macOS)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: build-output-${{ matrix.os }}-${{ matrix.arch || 'x86_64' }}
        path: build-output.zip

    - name: Upload build output (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: build-output-${{ matrix.os }}
        path: build-output.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifacts (Linux)
      if: matrix.os != 'windows-latest'
      uses: actions/download-artifact@v4
      with:
        name: build-output-ubuntu-latest-x86_64
        path: build/

    - name: Download build artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/download-artifact@v4
      with:
        name: build-output-windows-latest
        path: build/

    - name: Download build artifacts (macOS)
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
      uses: actions/download-artifact@v4
      with:
        name: build-output-macos-13-arm64
        path: build/

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: build/build-output.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
